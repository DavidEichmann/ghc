# Questions about this file?
# See https://ghc.haskell.org/trac/ghc/wiki/ContinuousIntegration/Usage.

version: 2

aliases:
  - &defaults
    working_directory: ~/ghc
  - &prepare
    run:
      name: prepare-system
      command: .circleci/prepare-system.sh
  - &submodules
    run:
      name: submodules
      command: .circleci/fetch-submodules.sh
  - &buildenv
    # ideally we would simply set THREADS here instead of re-detecting it every
    # time we need it below. Unfortunately, there is no way to set an environment
    # variable with the result of a shell script.
    SKIP_PERF_TESTS: NO
    VERBOSE: 2
  - &boot
    run:
      name: Boot
      command: |
        ./boot

        cat <<EOF >> mk/build.mk
        BuildFlavour=$BUILD_FLAVOUR
        ifneq "\$(BuildFlavour)" ""
        include mk/flavours/\$(BuildFlavour).mk
        endif
        EOF
  - &set_git_identity
      run:
        name: Set Git Identity
        command: |
          git config user.email "ghc-circleci@haskell.org"
          git config user.name "GHC CircleCI"
  - &configure_unix
    run:
      name: Configure
      command: ./configure
  - &configure_unix_32
    run:
      name: Configure
      command: |
        setarch i386 ./configure --with-ghc=/opt/ghc-i386/8.4.2/bin/ghc
  - &configure_bsd
    run:
      name: Configure
      command: ./configure --target=x86_64-unknown-freebsd10
  - &configure_unreg
    run:
      name: Configure
      command: ./configure --enable-unregisterised
  - &make
    run:
      name: Build
      command: "make -j`mk/detect-cpu-count.sh` V=0"
  - &build_hadrian
    run:
      name: Build GHC using Hadrian
      command: |
        cabal update
        hadrian/build.sh -j`mk/detect-cpu-count.sh`


  - &test_push
    run:
      name: Test Push
      command: |
        # Add git.haskell.org as a known host.
        echo "|1|F3mPVCE55+KfApNIMYQ3Dv39sGE=|1bRkvJEJhAN2R0LE/lAjFCEJGl0= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBBUZS9jGBkE5UzpSo6irnIgcQcfzvbuIOsFc8+N61FwtZncRntbaKPuUimOFPgeaUZLl6Iajz6IIs7aduU0/v+I=" >> ~/.ssh/known_hosts
        echo "|1|2VUMjYSRVpT2qJPA0rA9ap9xILY=|5OThkI4ED9V0J+Es7D5FOD55Klk= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+3TLluLAO4lkW60W+N2DFkS+WoRFGqLwHzgd1ifxG9TIm31wChPY3E/hgMnJmgGqWCF4UDUemmyCycEaL7FtKfzjTAclg9EfpQnozyE3T5hIo2WL7SN5O8ttG/bYGuDnn14jLnWwJyN4oz/znWFiDG9e2Oc9YFNlQ+PK8ae5xR4gqBB7EOoj9J1EiPqG2OXRr5Mei3TLsRDU6fnz/e4oFJpKWWeN6M63oePv0qoaGjxcrATZUWsuWrxVMmYo9kP1xRuFJbAUw2m4uVP+793SW1zxySi1HBMtJG+gCDdZZSwYbkV1hassLWBHv1qPttncfX8Zek3Z3VolaTmfWJTo9" >> ~/.ssh/known_hosts

        # Make fake note.
        git notes --ref notes_test add -m "Test01" HEAD

        # Push the git notes.
        git push git@git.haskell.org:ghc refs/notes/notes_test




  - &test
    run:
      name: Test
      command: |
        mkdir -p test-results
        make test                  TEST="T8766"                              THREADS=`mk/detect-cpu-count.sh` SKIP_PERF_TESTS=$SKIP_PERF_TESTS TEST_ENV=$TEST_ENV JUNIT_FILE=../../test-results/junit.xml
  - &store_test_results
    store_test_results:
      path: test-results
  - &push_perf_note
    run:
      name: Push Performance Git Notes
      command: |
        # Add git.haskell.org as a known host.
        echo "|1|F3mPVCE55+KfApNIMYQ3Dv39sGE=|1bRkvJEJhAN2R0LE/lAjFCEJGl0= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBBUZS9jGBkE5UzpSo6irnIgcQcfzvbuIOsFc8+N61FwtZncRntbaKPuUimOFPgeaUZLl6Iajz6IIs7aduU0/v+I=" >> ~/.ssh/known_hosts
        echo "|1|2VUMjYSRVpT2qJPA0rA9ap9xILY=|5OThkI4ED9V0J+Es7D5FOD55Klk= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+3TLluLAO4lkW60W+N2DFkS+WoRFGqLwHzgd1ifxG9TIm31wChPY3E/hgMnJmgGqWCF4UDUemmyCycEaL7FtKfzjTAclg9EfpQnozyE3T5hIo2WL7SN5O8ttG/bYGuDnn14jLnWwJyN4oz/znWFiDG9e2Oc9YFNlQ+PK8ae5xR4gqBB7EOoj9J1EiPqG2OXRr5Mei3TLsRDU6fnz/e4oFJpKWWeN6M63oePv0qoaGjxcrATZUWsuWrxVMmYo9kP1xRuFJbAUw2m4uVP+793SW1zxySi1HBMtJG+gCDdZZSwYbkV1hassLWBHv1qPttncfX8Zek3Z3VolaTmfWJTo9" >> ~/.ssh/known_hosts

        # Push the git notes.
        git push git@git.haskell.org:ghc refs/notes/perf
  - &slowtest
    run:
      name: Full Test
      command: make slowtest SKIP_PERF_TESTS=$SKIP_PERF_TESTS TEST_ENV=$TEST_ENV
  - &bindist
    run:
      name: Create bindist
      # Reduce compression effort to 3
      command: make binary-dist TAR_COMP_OPTS="-2"
      # Building bindist takes ~15 minutes without output, account for
      # that.
      no_output_timeout: "30m"
  - &storeartifacts
    run:
      name: Store artifacts
      command: |
        curl https://ghc-artifacts.s3.amazonaws.com/tools/ghc-artifact-collector-$GHC_COLLECTOR_FLAVOR --output ghc-artifact-collector
        chmod +x ghc-artifact-collector
        ./ghc-artifact-collector ghc*.tar.xz
  - &trigger_on_tags
    filters:
      tags:
        only: /^ghc-.*/

jobs:
  "validate-x86_64-linux":
    resource_class: xlarge
    docker:
      - image: ghcci/x86_64-linux:0.0.4
    environment:
      <<: *buildenv
      GHC_COLLECTOR_FLAVOR: x86_64-linux
      TEST_ENV: x86_64-linux
    steps:
      - checkout
      - *set_git_identity
      - *prepare
      - *submodules
      - *boot
      - *configure_unix
      #
      #
      #
      #
      - *test_push
      #
      #
      #
      #- *make
      #- *bindist
      #- *storeartifacts
      #- *test
      #- *store_test_results
      #- *push_perf_note

  "validate-x86_64-freebsd":
    resource_class: xlarge
    docker:
      - image: ghcci/x86_64-freebsd
    environment:
      TARGET: FreeBSD
      <<: *buildenv
      GHC_COLLECTOR_FLAVOR: x86_64-freebsd
      TEST_ENV: x86_64-freebsd
    steps:
      - checkout
      - *set_git_identity
      - *prepare
      - *submodules
      - *boot
      - *configure_bsd
      - *make
      - *bindist
      - *storeartifacts
      - *test
      - *store_test_results
      - *push_perf_note

  "validate-x86_64-darwin":
    macos:
      xcode: "9.0"
    environment:
      # Disable sphinx PDF output as MacTeX apparently doesn't provide xelatex
      BUILD_SPHINX_PDF: "NO"
      MACOSX_DEPLOYMENT_TARGET: "10.7"
      # Only Sierra and onwards supports clock_gettime. See #12858
      ac_cv_func_clock_gettime: "no"
      GHC_COLLECTOR_FLAVOR: x86_64-darwin
      <<: *buildenv
      TEST_ENV: x86_64-darwin
    steps:
      - checkout
      - *set_git_identity
      - *prepare
      - *submodules
      - *boot
      - *configure_unix
      - *make
      - *bindist
      - *storeartifacts
      - *test
      - *store_test_results
      - *push_perf_note

  "validate-hadrian-x86_64-linux":
    resource_class: xlarge
    docker:
      - image: ghcci/x86_64-linux:0.0.4
    environment:
      <<: *buildenv
    steps:
      - checkout
      - *set_git_identity
      - *prepare
      - *submodules
      - *boot
      - *configure_unix
      - *build_hadrian

  "validate-x86_64-linux-unreg":
    resource_class: xlarge
    docker:
      - image: ghcci/x86_64-linux:0.0.4
    environment:
      <<: *buildenv
      TEST_ENV: x86_64-linux-unreg
    steps:
      - checkout
      - *set_git_identity
      - *prepare
      - *submodules
      - *boot
      - *configure_unreg
      - *make
      - *test
      - *store_test_results
      - *push_perf_note

  "validate-x86_64-linux-llvm":
    resource_class: xlarge
    docker:
      - image: ghcci/x86_64-linux:0.0.4
    environment:
      <<: *buildenv
      BUILD_FLAVOUR: perf-llvm
      TEST_ENV: x86_64-linux-llvm
    steps:
      - run:
          name: Install LLVM
          command: |
            curl http://releases.llvm.org/6.0.0/clang+llvm-6.0.0-x86_64-linux-gnu-debian8.tar.xz | tar -xJC ..
            echo "export PATH=`pwd`/../clang+llvm-6.0.0-x86_64-linux-gnu-debian8/bin:\$PATH" >> $BASH_ENV
      - run:
          name: Verify that llc works
          command: llc
      - checkout
      - *set_git_identity
      - *prepare
      - *submodules
      - *boot
      - *configure_unix
      - *make
      - *test
      - *push_perf_note

  # Nightly build with -DDEBUG using devel2 flavour
  "validate-x86_64-linux-debug":
    resource_class: xlarge
    docker:
      - image: ghcci/x86_64-linux:0.0.4
    environment:
      BUILD_FLAVOUR: devel2
      <<: *buildenv
      TEST_ENV: x86_64-linux-debug
      SKIP_PERF_TESTS: YES
    steps:
      - checkout
      - *set_git_identity
      - *prepare
      - *submodules
      - *boot
      - *configure_unix
      - *make
      - *test
      - *store_test_results
      - *push_perf_note

  "validate-i386-linux":
    resource_class: xlarge
    docker:
      - image: ghcci/i386-linux:0.0.5
    environment:
      <<: *buildenv
      GHC_COLLECTOR_FLAVOR: i386-linux
      TEST_ENV: i386-linux
    steps:
      - checkout
      - *set_git_identity
      - *prepare
      - *submodules
      - *boot
      - *configure_unix_32
      - *make
      - *bindist
      - *storeartifacts
      - *test
      - *store_test_results
      - *push_perf_note

  "validate-x86_64-fedora":
    resource_class: xlarge
    docker:
      - image: ghcci/x86_64-linux-fedora:0.0.15
    environment:
      <<: *buildenv
      GHC_COLLECTOR_FLAVOR: x86_64-fedora
      TEST_ENV: x86_64-fedora
    steps:
      - checkout
      - *set_git_identity
      - *prepare
      - *submodules
      - *boot
      - *configure_unix
      - *make
      - *bindist
      - *storeartifacts
      - *test
      - *store_test_results
      - *push_perf_note

  "slow-validate-x86_64-linux":
    resource_class: xlarge
    docker:
      - image: ghcci/x86_64-linux:0.0.4
    environment:
      <<: *buildenv
      TEST_ENV: slow-x86_64-linux
      GHC_COLLECTOR_FLAVOR: x86_64-linux
    steps:
      - checkout
      - *set_git_identity
      - *prepare
      - *submodules
      - *boot
      - *configure_unix
      - *make
      - *slowtest
      - *push_perf_note

workflows:
  version: 2
  validate:
    jobs:
    - validate-x86_64-linux:
        *trigger_on_tags
    # FreeBSD disabled: https://github.com/haskell/unix/issues/102
    # - validate-x86_64-freebsd
#    - validate-x86_64-darwin:
#        *trigger_on_tags
#    - validate-x86_64-linux-llvm
#    - validate-i386-linux:
#        *trigger_on_tags
#    - validate-hadrian-x86_64-linux
#    - validate-x86_64-fedora:
#        *trigger_on_tags
#
#  nightly:
#    triggers:
#      - schedule:
#          cron: "0 0 * * *"
#          filters:
#            branches:
#              only:
#                - master
#    jobs:
#    - validate-x86_64-linux-unreg
#    - validate-x86_64-linux-llvm
#    - validate-x86_64-linux-debug
#    - slow-validate-x86_64-linux

notify:
  webhooks:
    - url: https://phabricator.haskell.org/harbormaster/hook/circleci/
